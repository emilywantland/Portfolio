Create a Windows Forms GUI application that will determine an individual's Federal marginal income tax rate and income tax amount due given the individual's taxable income and filing status. A listing of the tax rates and explanation of the calculations may be found here:

https://www.fool.com/taxes/2018/12/10/what-are-the-2019-tax-brackets.aspx

The above article from Motley Fool explains how the current Federal income tax rates work. Under current law, there are seven marginal tax brackets that apply to all taxable income earned within a specified range of income levels. The rates are 10%, 12%, 22%, 24%, 32%, 35%, and 37%. There are different income ranges for each rate depending on the individual's filing status. The filing statuses are Single, Married Filing Jointly, Head of Household, and Married Filing Separately.

Your form will need to gather the user's taxable income (from a textbox) as an int and the user's filing status (Single, Married Filing Jointly, Head of Household, or Married Filing Separately ) using a set of RadioButton controls.

When the user submits their information, your application should display their marginal tax rate (which is the highest rate in which their income falls) and the amount of tax that would be due for this individual based on their taxable income and filing status. You may use labels, textboxes, or a dialog box (as with method MessageBox.Show) to display this information to the user.

For this assignment, I want you to write the decision logic using ONLY Chapter 4 material. We will solve this assignment a second time later, using arrays and loops, so you must not use those things in this solution. Think carefully about how you should structure your decision logic. There are many ways to structure the decision logic but some approaches are much easier and efficient than others. Think about several alternatives before committing to one. You will probably want to break this problem down into smaller steps and build the application in pieces. For example, designing the layout of the GUI as one step. Adding support for Single filers as another step, then adding Head of Household filers, etc. As you consider the design of your decision logic, look for opportunities to reduce duplication of code by nesting decisions using blocks. Strive for efficiency with your decision logic when testing the tax ranges, as well. Don't test both ends of a range if you can avoid it.